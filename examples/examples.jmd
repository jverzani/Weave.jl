# Examples of Weave


```{hide=true, display=false, results="none"}
using Weave
tabs = tabbable()
```

```{hide=true, results="js"}
using Gadfly
Gadfly.prepare_display()
```


```{results="html"}
tabs.start()
tabs.next("Basic content")
```

## Weave

`Weave` facilitates the writing of self-grading quizzes with markdown
and embedded `julia` code and graphs. The conversion from `Markdown`
to `HTML` is done with `pandoc` using some code borrowed from DC
Jones' `Judo` package, written to document `Gadfly`.  This package
provides the question writing interface and some other markup.

Basic content is handled with markdown. Simple command are executed
and printed with comments to separate them from the input:

```
2 + 2
```

More complicated expressions print the last value computed. There is
no means to use `println` for intermediate results.

```
xs = 1:3
ys = map(x->x^2, xs)
[xs ys]
```




There are ways to control what is printed:

* hide: Don't show the code block. (defaut: false)
* execute: Do excute the code block. (default: true)
* display: Do display output. (default: true)
* results:
   -none 
   -block (default)
   -expression
   -asis

Graphics can be include via `Gadfly`:


```
using Gadfly
plot(sin, 0, pi)
```

```{results="html"}
tabs.next("Bootstrap styles")
```

## Bootstrap styles


Bootstrap is used to style the pages. The navigation is provided by a
`tabbable` function. It's use is fairly straightforward.


To set text off, one can use `alert`:


```{results="html"}
alert("""

This is an alert

""")
```

There are some other styles:

Examples:

```{results="html"}
example("Many parts")
```

Make an example



```{results="html"}
note("A note")
```

A basic note


> *blockquotes* are just done using Markdown


Inline images allow inclusion of local images without having to have a url, nice to make the pages self-contained.

```{hide=true}
using Compose
fname = tempname()
img = PNG(fname, 4inch, 3inch)
draw(img, Gadfly.plot(x -> sin(x^2), 0, 2pi))
Compose.finish(img)
inline_img(fname)
```





```{results="html"}
## This is a new page on questions
tabs.next("Questions")
```

## Questions

There are some simple ways to incude self-grading questions. The H4 header will put an icon in front of the text, so use four pound signs to preface.


#### Question 1

what is 3?

```{results="js"}
numericq(3, .001; hint="answer is *three*")
```


#### Question 2

What is *not* false?

```{results="js"}
booleanq(true, hint="answer is true")
```

#### Question 3 

what is one?

```{results="js"}
Weave.radioq(["one *einz* **ichi** _uno_ un", "two", "three"], 1, hint="one is `1`, of course")
```



#### Question 4

What is two?

```{results="js"}
choiceq(["one", "two", "three"], 2, hint="two is *two*, of course")
```



#### Question 5

Spell "cat"

```{results="js"}
Weave.textq("^cat\$", hint="It is not *kat*")
```


```{results="js"}
tabs.finish()
```
